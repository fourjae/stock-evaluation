plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.oauth2'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
	targetCompatibility = '21'
}

ext {
	qdslVersion = '7.0'        // OpenFeign Querydsl 최신
}

dependencyManagement {
	imports {
		mavenBom "io.github.openfeign.querydsl:querydsl-bom:${qdslVersion}"   // 모든 모듈 버전 통일
	}
}

tasks.withType(JavaCompile).configureEach {
	options.incremental = true
}

sourceSets.main.java.srcDir "$buildDir/generated/sources/annotationProcessor/java/main"


repositories {
	mavenCentral()
}

dependencies {

	/* ──────────────── Core / Web ──────────────── */
	implementation 'org.springframework.boot:spring-boot-starter-web'

	/* ──────────────── Data Layer ──────────────── */
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly   'com.mysql:mysql-connector-j'         // JDBC driver만 런타임 필요

	implementation "io.github.openfeign.querydsl:querydsl-jpa"               // QueryDSL 런타임
	annotationProcessor("io.github.openfeign.querydsl:querydsl-apt:${qdslVersion}:jakarta") // Q 클래스 생성

	/* ──────────────── Reactive / WebClient ──────────────── */
	implementation 'org.springframework.boot:spring-boot-starter-webflux'   // ★ WebClient 포함

	/* ─────────── Spring Security & OAuth2 핵심 ──────────── */
	implementation 'org.springframework.boot:spring-boot-starter-security'            // 기본 WebSecurity
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'       // OAuth2 Login (Google·Kakao 등)
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server' // JWT 검증·리소스 서버

	/* ─────────────── 웹/JSON 등 기타─────────────── */
	implementation 'org.springframework.boot:spring-boot-starter-web'                 // REST API
	implementation 'org.springframework.boot:spring-boot-starter-validation'		  // 유효성 검사

	/* ────────────────── 개발 편의 ────────────────── */
	compileOnly         'org.projectlombok:lombok:1.18.32'
	annotationProcessor 'org.projectlombok:lombok:1.18.32'

	/* ─────────────────── 테스트 ─────────────────── */
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'             // MockMvc + Security

	/* ────────── (선택) JWT 직접 발급 시 ────────── */
	 implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	 runtimeOnly    'io.jsonwebtoken:jjwt-impl:0.12.5', 'io.jsonwebtoken:jjwt-jackson:0.12.5'





}

tasks.named('test') {
	useJUnitPlatform()
}
